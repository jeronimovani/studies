// METODO CONVENCIONAL DE INICIAR MATRIZES
/*
string[] fraudulentOrderIDs = new string[3];

fraudulentOrderIDs[0] = "A123";
fraudulentOrderIDs[1] = "B456";
fraudulentOrderIDs[2] = "C789";
// fraudulentOrderIDs[3] = "D000";
*/

string[] fraudulentOrderIDs = { "A123", "B456", "C789" };

Console.WriteLine($"First: {fraudulentOrderIDs[0]}");
Console.WriteLine($"Second: {fraudulentOrderIDs[1]}");
Console.WriteLine($"Third: {fraudulentOrderIDs[2]}");

fraudulentOrderIDs[0] = "F000";

Console.WriteLine($"Reassign First: {fraudulentOrderIDs[0]}");

Console.WriteLine($"There are {fraudulentOrderIDs.Length} fraudulent orders to process.");




//////////////////////// retornar strings

/*
string[] names = {"Vani", "Josmar", "Marcia", "José", "Vitória"};
foreach (string item in names)
{
    Console.WriteLine(item);
}
*/

/////////////////// RETORNAR ITENS E O RESULTADO DA SOMA

int[] inventory = {200, 300, 400, 500, 600, 700, 800};
int sum = 0;
int result = sum;
foreach(int items in inventory)
{
    Console.WriteLine(items);
    sum += items;
    result = sum;
}

result++;

if(result > 3500)
{
    Console.WriteLine($"Parabens, você alcançou o resultado: {result}");
}

Console.WriteLine(sum);
Console.WriteLine(result);


/////////////////////////////////// GERADOR DE PEDIDO - VALIDADOR PEDIDOS FRAUDULENTOS

using System.Net.NetworkInformation;

Random random = new Random();
string[] orderIDs = new string[5];
for (int i = 0; i < orderIDs.Length; i++)
{
    int prefixValue = random.Next(65, 70); // GERAR NUMERO 
    string prefix = Convert.ToChar(prefixValue).ToString(); // CONVERTER DENTRO DA ESCALA ASCII (LETRA ESTÁ ENTRE A - E)
    string suffix = random.Next(1, 1000).ToString("000"); 
    orderIDs[i] = prefix + suffix;
}

foreach(string orderID in orderIDs)
{
    Console.WriteLine(orderID); // RETORNAR PEDIDOS

    if (orderID.StartsWith("A"))
    {
        Console.WriteLine($"Pedido: {orderID}"); // RETORNAR PEDIDOS "A"
    }
    
}
