// METODO CONVENCIONAL DE INICIAR MATRIZES
/*
string[] fraudulentOrderIDs = new string[3];

fraudulentOrderIDs[0] = "A123";
fraudulentOrderIDs[1] = "B456";
fraudulentOrderIDs[2] = "C789";
// fraudulentOrderIDs[3] = "D000";
*/

string[] fraudulentOrderIDs = { "A123", "B456", "C789" };

Console.WriteLine($"First: {fraudulentOrderIDs[0]}");
Console.WriteLine($"Second: {fraudulentOrderIDs[1]}");
Console.WriteLine($"Third: {fraudulentOrderIDs[2]}");

fraudulentOrderIDs[0] = "F000";

Console.WriteLine($"Reassign First: {fraudulentOrderIDs[0]}");

Console.WriteLine($"There are {fraudulentOrderIDs.Length} fraudulent orders to process.");

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



using System;

int[] sophiaPontos = new int[]{90,86,87,98,100,94,90};
int[] andrewPontos = new int[]{92,89,81,96,90,89};
int[] emmaPontos = new int[]{90,85,87,98,68,89,89,89};
int[] loganPontos = new int[]{90,95,87,88,96,96};
int[] vaniPontos = {89, 99, 95, 66, 100,92,87};

string[] alunoNomes = new string[]{"Vani", "Andrew", "Emma", "Logan", "Sophia"};

int[] alunoPontos = new int[10];

int nProvas = 5;
string letra = "";

int count=0;
int count2=0;
foreach(string aluno in alunoNomes)
{
    count++;
    string alunoAtual = aluno;
    
    if(alunoAtual == "Sophia")
        alunoPontos = sophiaPontos;

    else if(alunoAtual == "Andrew")
        alunoPontos = andrewPontos;

    else if(alunoAtual == "Emma")
        alunoPontos = emmaPontos;

    else if(alunoAtual == "Logan")
        alunoPontos = loganPontos;

    else if(alunoAtual == "Vani")
        alunoPontos = vaniPontos;

decimal calculoPontos = 0;
int somaAluno = 0;

//foreach para calculo de pontos na matriz.
    foreach(int pontos in alunoPontos)
    {
        count2++;
        somaAluno+=pontos;
    }
    calculoPontos = (decimal)(somaAluno)/nProvas;

    if (calculoPontos >= 97)
        letra = "A+";

    else if (calculoPontos >= 93)
        letra = "A";

    else if (calculoPontos >= 90)
        letra = "A-";

    else if (calculoPontos >= 87)
        letra = "B+";

    else if (calculoPontos >= 83)
        letra = "B";

    else if (calculoPontos >= 80)
        letra = "B-";

    else if (calculoPontos >= 77)
        letra = "C+";

    else if (calculoPontos >= 73)
        letra = "C";

    else if (calculoPontos >= 70)
        letra = "C-";

    else if (calculoPontos >= 67)
        letra = "D+";

    else if (calculoPontos >= 63)
        letra = "D";

    else if (calculoPontos >= 60)
        letra = "D-";

    Console.WriteLine($"repForeachExt: {count}\t{alunoAtual}\t\t{calculoPontos}\t{letra}\t repForeachInter: {count2}");
    
}
    Console.WriteLine("Pressione \"ENTER\" para continuar");
    Console.ReadLine();




//////////////////////// retornar strings

/*
string[] names = {"Vani", "Josmar", "Marcia", "José", "Vitória"};
foreach (string item in names)
{
    Console.WriteLine(item);
}
*/

/////////////////// RETORNAR ITENS E O RESULTADO DA SOMA

int[] inventory = {200, 300, 400, 500, 600, 700, 800};
int sum = 0;
int result = sum;
foreach(int items in inventory)
{
    Console.WriteLine(items);
    sum += items;
    result = sum;
}

result++;

if(result > 3500)
{
    Console.WriteLine($"Parabens, você alcançou o resultado: {result}");
}

Console.WriteLine(sum);
Console.WriteLine(result);


/////////////////////////////////// GERADOR DE PEDIDO - VALIDADOR PEDIDOS FRAUDULENTOS

using System.Net.NetworkInformation;

Random random = new Random();
string[] orderIDs = new string[5];
for (int i = 0; i < orderIDs.Length; i++)
{
    int prefixValue = random.Next(65, 70); // GERAR NUMERO 
    string prefix = Convert.ToChar(prefixValue).ToString(); // CONVERTER DENTRO DA ESCALA ASCII (LETRA ESTÁ ENTRE A - E)
    string suffix = random.Next(1, 1000).ToString("000"); 
    orderIDs[i] = prefix + suffix;
}

foreach(string orderID in orderIDs)
{
    Console.WriteLine(orderID); // RETORNAR PEDIDOS

    if (orderID.StartsWith("A"))
    {
        Console.WriteLine($"Pedido: {orderID}"); // RETORNAR PEDIDOS "A"
    }
    
}

///////////////////////////////////////////////////////////////////////////// BOOL PAR OU IMPAR

bool numeroPar(int numero)
{
    return numero % 2 == 0;
}

if(numeroPar(10098))
{
    Console.WriteLine("O numero é par!");
}
else
{
    Console.WriteLine("O numero é impar!");
}
Console.WriteLine(numeroPar(10098));

///////////////////////////////////////////////////////////////////////////// FizzBuzz desafio

int[] values = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100};
for (int i = 0; i < 101; i++) 
{
    if(i % 3==0 && i % 5 == 0)
        Console.WriteLine($"{i} - FizzBuzz");
    else if(i % 3 == 0)
        Console.WriteLine($"{i} - Fizz");
    else if(i % 5 == 0)
        Console.WriteLine($"{i} - Buzz");
    else
        Console.WriteLine(i);
}
