// ---------------------> Minha solução 
// Trabalhando com .Split, String.Join, Array.Reverse(minhaArray);

string pangram = "The quick brown fox jumps over the lazy dog";
string[] pangramStringArray = pangram.Split(" ");
char[] pangramCharArray = new char[5];
string[] pangramReverseArray = new string[9];
string pangramReverse = "";

for (int i = 0; i < 9; i++)
{
    string convert = pangramStringArray[i];
    pangramCharArray = convert.ToCharArray();
    for (int j = 0; j < pangramCharArray.Length; j++)
    {
        pangramReverseArray[i] += pangramCharArray[j];
    }
}
pangramReverse = String.Join(" ", pangramReverseArray);
Console.WriteLine(pangramReverse);

// ---------------- Solução LEARN
// Trabalhando com .Split, String.Join, Array.Reverse(minhaArray);
// Aqui foi utilizado o construtor de string .... newMessage[i] = new string(letters);

string pangram = "The quick brown fox jumps over the lazy dog";

string[] message = pangram.Split(' ');

string[] newMessage = new string[message.Length];

for(int i = 0; i < message.Length; i++)
{
    char[] letters = message[i].ToCharArray();
    Array.Reverse(letters);
    newMessage[i] = new string(letters);
}

string result = String.Join(' ', newMessage);
Console.WriteLine(result);

////////////////////////////////////////// ---------------------> Minha solução( Analisar uma cadeia de caracteres de pedidos, classificá-los e marcar possíveis erro )
string orderStream = "B123,C234,A345,C15,B177,G3003,C235,B179";
string[] pedidos = orderStream.Split(',');

Array.Sort(pedidos);
for (int i = 0; i < pedidos.Length; i++)
{
    char[] letters = pedidos[i].ToCharArray();
    Console.WriteLine(letters.Length != 4 ? $"{pedidos[i]}\t- Error" : $"{pedidos[i]}");
}

///////////// ---------------- Solução LEARN ( Analisar uma cadeia de caracteres de pedidos, classificá-los e marcar possíveis erro )

string orderStream = "B123,C234,A345,C15,B177,G3003,C235,B179";
string[] items = orderStream.Split(',');
Array.Sort(items);

foreach (var item in items)
{
    if (item.Length == 4)
    {
        Console.WriteLine(item);
    }
    else
    {
        Console.WriteLine(item + "\t- Error");
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////////
///////// -----> Formatação de Valores >>>>
int invoiceNumber = 1201;
decimal productShares = 25.4568m;
decimal subtotal = 2750.00m;
decimal taxPercentage = .15825m;
decimal total = 3185.19m;

Console.WriteLine($"Invoice number: {invoiceNumber}");
Console.WriteLine($"    Shares: {productShares:N3} Product");
Console.WriteLine($"      Sub Total: {subtotal:C2}");
Console.WriteLine($"            Tax: {taxPercentage:P2}");
Console.WriteLine($"    Total Billed: {total:C}");

---->>minhaString.PadLeft(); ou PedRight(); // pode ser utilizado com ou sem caractere definido.
string input = "Pad this";
Console.WriteLine(input.PadLeft(12, '-'));
Console.WriteLine(input.PadRight(12, '-'));

string paymentId = "769C";
string payeeName = "Mr. Stephen Ortega";
string paymentAmount = "$5,000.00";

var formattedLine = paymentId.PadRight(6);
formattedLine += payeeName.PadRight(24);
formattedLine += paymentAmount.PadRight(10);

Console.WriteLine("1234567890123456789012345678901234567890");
Console.WriteLine(formattedLine);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
