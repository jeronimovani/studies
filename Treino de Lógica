string ogMessage = "O vani talvez possa ser um bom programador 1 dia";
char[] aMessage = ogMessage.ToCharArray();
char[] bMessage = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i'};
int count = 0;
foreach(char c in ogMessage)
{
    count++;
    //Console.WriteLine(c);
}

for(int i = 0; i < aMessage.Length; i++)
{
    for(int z = 0; z < bMessage.Length; z++)
    if(aMessage[i] == bMessage[z])
    {
        Console.WriteLine($"Igual entre a e b na posição {i} os iguais são: A:{aMessage[i]} e B:{bMessage[z]}");
    }
}

Console.WriteLine($"A sua contagem deu um total de {count}");

Array.Reverse(aMessage);

Console.WriteLine(aMessage);

|#|___________________________________________________________________________________________|#|
|#|___________________________________________________________________________________________|#|
|#|__________VERIFICAR SE A SOMA DE DOIS INDEX OU 1 INDEX PODE CHEGAR AO ALVO SETADO__________|#|
|#|___________________________________________________________________________________________|#|
|#|___________________________________________________________________________________________|#|

int target = 0;
int[] coins = { 3, 5, 19, 20, 10, 8, 7, 6, 4, 2, 1, 9, 0 };
int[] result = TwoCoins(coins, target);

string final = result.Length == 0 ? "Não encontramos nem um par para a soma!" : result.Length == 1 ? $"O index {result[0]} é correspondente" : $"Encontramos os indexes {result[0]} e {result[1]}";

Console.WriteLine(final);
int[] TwoCoins(int[] coins, int target)
{
    for (int i = coins.Length - 1; i >= 0; i--)
    {
        for (int j = coins.Length - 2; j >= 0; j--)
        {
            if (coins[i] == target)
            {
                return new int[] { i };
            }
            else if (coins[j]== target)
            {
                return new int[] { j };
            }
            if (coins[j] + coins[i] == target)
            {
                return new int[] { j, i };
            }
        }
    }
    return new int[0];
}
|#|_________________________________|#|
|#|_________________________________|#|
|#|__________jogo de dados__________|#|
|#|_________________________________|#|
|#|_________________________________|#|

Random random = new Random();

Console.WriteLine($"Vamos jogar? (S/N)");
if (Jogar())
{
    string nome = "";
    bool entrada = false;
    Console.WriteLine("Insira um nome (min 4 digitos) ou tecle enter para jogar");
    while (!entrada)
    {
        nome = Console.ReadLine();
        if (nome == "")
        {
            break;
        }
        if (nome.Length <= 3 || nome.Contains(" "))
        {
            Console.WriteLine($"Nome invalido!");
            continue;
        }
        else
            entrada = true;
    }
    if (entrada && nome != "")
    {
        Joguinho(nome);
    }
    else
        Joguinho();
}


void Joguinho(string name = "none")
{
    bool nomeTrue = name != "none";
    bool jogando = true;

    while (jogando)
    {
        int alvo = Alvo();
        int dados = Dados();
        Console.Clear();
        Console.WriteLine(nomeTrue ? $"{name}, será que você consegue tirar mais do que {alvo}?!" : $"Você precisa tirar mais do que {alvo} para ganhar!");
        Console.WriteLine("Aperte qualquer tecla quando quiser lançar os dados!");
        Console.ReadLine();
        for (int i = 3; i >= 0; i--)
        {
            Console.Write($"\rAssoprando dados... {i}");
            Thread.Sleep(700);
        }
        Console.WriteLine($"\rVocê tirou {dados} {new string(' ', Console.BufferWidth)}");
        Console.Write($"\r{GanhouOuPerdeu(alvo, dados)}");
        Console.WriteLine();
        Console.WriteLine("Quer continuar jogando ? (S/N)");

        jogando = Jogar();

    }
}

bool Jogar()
{
    string entrada = Console.ReadLine();
    return entrada.Trim().ToLower().Contains("s");
}

int Alvo()
{
    return random.Next(0, 6);
}
int Dados()
{
    return random.Next(0, 7);
}

string GanhouOuPerdeu(int alvo, int dados)
{
    return dados > alvo ? "Parabens, você ganhou!" : "Droga, você perdeu :/";
}

|#|________________________________________________|#|
|#|________________________________________________|#|
|#|________________________________________________|#|
|#|________________________________________________|#|
